---
title: "Natural Gas Planning"
author: "Joseph Welsh"
format: gfm
editor: visual
---

```{r setup, echo=FALSE, warning=FALSE, error=FALSE,message=FALSE}
library(tidyverse)
library(sf)
```


## Simulating data

Your writer used R's inbuilt distribution functions to simulate random x and y coordinates for different meter points.

```{r funcdef, echo=FALSE, warning=FALSE, error=FALSE,message=FALSE}

bbox_coords = c(-94, 30, -71, 42)

genPipelinePoints = 
  function(name, 
           x1, y1, x2, y2){

    xmin = x1
    ymin = y1
    xmax = x2
    ymax = y2
    
    #generate 15 random x coordinates for lines
    xcoords = runif(n = 25, 
          min = xmin, max = xmax)
    
    #generate 15 random y coordinates for lines
    ycoords = runif(n = 25, 
          min = ymin, max = ymax)
    
    df = 
      tibble(
      Pipeline = name,
      Meter = runif(n=25, 
                    min = 11111111,
                    max = 99999999),
      lon = sort(xcoords),
      lat = sort(ycoords),
      supply = pmax(
        rnorm(n = 25, 
              mean = 100000, 
              sd = 50000),
        0),
      demand = pmax(
        rnorm(n = 25,
               mean = 200000,
               sd = 200000)
        ,0)
      )
    return(df)
  }

```


```{r pipelines, echo=FALSE, warning=FALSE, error=FALSE,message=FALSE}
set.seed(9999)
pipelines = 
  tibble(
  Name = c("Sphinx", "Griffin", "Manticore", "Pegasus"), 
  xmin = rep(bbox_coords[1], times = 4),
  ymin = rep(bbox_coords[2], times = 4),
  xmax = rep(bbox_coords[3], times = 4),
  ymax = rep(bbox_coords[4], times = 4)
) %>% rowwise() %>% 
  mutate(data = 
           list(
             genPipelinePoints(Name,
                               x1 = xmin,
                               y1 = ymin,
                               x2 = xmax,
                               y2 = ymax)
             )) %>% 
  select(data) %>% 
  unnest(cols = data) %>% 
  mutate(ft1 = abs(-80 - lon),
         ft2 = abs(32 - lat),
         ra = lat) %>% 
  st_as_sf(coords = c('lon', 'lat'),
           crs=4326)

```


```{r crossing, echo=FALSE, warning=FALSE, error=FALSE,message=FALSE}
# create pipeline project that unifies 4 points
crossing = 
  pipelines %>% 
  group_by(Pipeline) %>% 
  slice_min(order_by=ft1,
            n=1) %>% 
  ungroup() %>% 
  arrange(ra)

crossing_geom = 
  crossing %>% 
  summarize(geometry = st_combine(geometry)) %>% 
  mutate(Pipeline = "Pipeline Crossing Project",
         .before = geometry) %>% st_cast("LINESTRING")


pipelines_geom = pipelines %>% 
  group_by(Pipeline) %>% 
  summarise(geometry = st_combine(geometry)) %>%
  st_cast("LINESTRING")

ggplot() +
  
  geom_sf(data = pipelines_geom,
          aes(color = Pipeline)) +
  geom_sf(data = pipelines, 
          aes(color = Pipeline)) +
  geom_sf(data = crossing_geom, linewidth=1.2,
          aes(color = Pipeline)) +
  ggtitle('Map of pipelines in the southeast of Mars') +
  scale_x_continuous(labels = 
                       scales::label_number(
                         accuracy = .00001,
                         suffix = '°W'
                       )) +
  scale_y_continuous(labels = 
                       scales::label_number(
                         accuracy = .00001,
                         suffix = '°N'
                       )) +
  theme_minimal()

 
```


```{r alternatives, echo=FALSE, warning=FALSE, error=FALSE,message=FALSE}

crossing_length = 
  crossing_geom %>% st_length() # meters

crossing_cost = as.numeric(crossing_length) * 2000

crossing_cost %>% scales::dollar()
```

